a:6:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:87:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:82:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:87:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:75:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:87:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:75:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:87:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:75:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:114:"Since symfony/doctrine-bridge 6.3: Using Doctrine subscribers as services is deprecated, declare listeners instead";s:4:"file";s:146:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/doctrine-bridge/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php";s:4:"line";i:109;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:146:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/doctrine-bridge/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php";s:4:"line";i:63;s:8:"function";s:17:"addTaggedServices";s:5:"class";s:97:"Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterEventListenersAndSubscribersPass";s:4:"type";s:2:"->";}}s:5:"count";i:3;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:114:"Since symfony/doctrine-bridge 6.3: Using Doctrine subscribers as services is deprecated, declare listeners instead";s:4:"file";s:87:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/deprecation-contracts/function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:99:"/Users/loic/Documents/GitHub/resultat/vendor/symfony/doctrine-bridge/ContainerAwareEventManager.php";s:4:"line";i:195;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:3;}}